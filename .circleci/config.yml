version: 2.0

build_jobs: &build_jobs
  jobs:
    # - build-amd64
    # - build-arm64
     - build-mips64el
    - push-manifest:
        requires:
#          - build-amd64
#          - build-arm64
          - build-mips64el

workflows:
  version: 2
  commit:
    <<: *build_jobs
  nightly:
    <<: *build_jobs
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master

shared: &shared
  docker:
    - image: docker:stable-git
  steps:
    - checkout

    - setup_remote_docker:
        docker_layer_caching: true

    - run:
        name: Install build dependencies.
        command: apk add --upgrade --no-cache bash curl git jq make perl

    - run:
        name: Add dynamic shared vars to env.
        command: .circleci/load_env.sh

    - run:
        name: Build and push Docker image.
        command: |
          source $BASH_ENV
          .circleci/build-image.sh

jobs:
  build-amd64:
    <<: *shared
    environment:
      GOARCH: amd64
      QEMU_ARCH: amd64
      TAG: amd64
      TARGET: amd64
  build-arm64:
    <<: *shared
    environment:
      GOARCH: arm64
      QEMU_ARCH: aarch64
      TAG: arm64
      TARGET: arm64v8
  build-mips64:
    <<: *shared
    environment:
      GOARCH: mips64el
      QEMU_ARCH: mips64el
      TAG: mips64el
      TARGET: mips64el
  push-manifest:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Load env vars.
          command: |
            apk add --upgrade --no-cache curl jq
            sh .circleci/load_env.sh

      - run:
          name: Install manifest-tool, and push + verify manifest.
          command: |
            source $BASH_ENV
            sh .circleci/push_manifest.sh
      # - run:
      #     name: Install manifest-tool.
      #     command: |
      #       echo "Downloading manifest-tool."
      #       MT_VERSION=$(curl https://api.github.com/repos/estesp/manifest-tool/releases | jq '.[].tag_name' -r | head -n1)
      #       wget https://github.com/estesp/manifest-tool/releases/download/${MT_VERSION}/manifest-tool-linux-amd64
      #       mv manifest-tool-linux-amd64 /usr/bin/manifest-tool
      #       chmod +x /usr/bin/manifest-tool
      #       manifest-tool --version
      # - run:
      #     name: Push Docker manifest.
      #     command: |
      #       source $BASH_ENV
      #       echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin;
      #       manifest-tool push from-args \
      #         --platforms linux/amd64,linux/arm,linux/arm64 \
      #         --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
      #         --target "$REGISTRY/$IMAGE:$VERSION"
      #       if [ "${CIRCLE_BRANCH}" == 'master' ]; then
      #         manifest-tool push from-args \
      #           --platforms linux/amd64,linux/arm,linux/arm64 \
      #           --template "$REGISTRY/$IMAGE:$VERSION-ARCH" \
      #           --target "$REGISTRY/$IMAGE:latest"
      #       fi
      #       - run:
      #           name: Verify manifest was persisted remotely.
      #           command: |
      #             source $BASH_ENV
      #             manifest-tool inspect "$REGISTRY/$IMAGE:$VERSION"
